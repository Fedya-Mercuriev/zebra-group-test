- blocks = {};

mixin block-wrapper(options, isHero= false)
    //- Свойства opions:
    //- @bg (задает класс, по которому блоку будет применяться определенный фон)
    //- @title (загловок для блока)
    //- Свойство @hero определеяет является ли блок главным на странице
    block
    if (isHero)
        - baseClassName = 'hero-block';
        - classList = (options.textColor === 'light') ? `${baseClassName} ${baseClassName}--light-text` : baseClassName;
        - classList += ` ${baseClassName}--bg-${options.bg}`
        //- Структура для главного блока  
        div(class= classList)
            .block-content-wrapper
                if (options.title)
                    .block-header   
                        h1.hero-block__title= options.title
                .hero-block__content
                    - for (var block in blocks)
                        - blocks[block]()
                    //- В конце прохождения каждого цикла очищает объект с блоками 
                    //- во избежание дублирования
                    -blocks = {}
    else
        - baseClassName = 'slide-content';
        - classList = (options.textColor === 'light') ? `${baseClassName} ${baseClassName}--light-text` : baseClassName;
        - classList += ` ${baseClassName}--bg-${options.bg}`
        //- Структура для основного блока
        div(class= classList)
            .block-content-wrapper
                if (options.title)
                    .block-header
                        h2.block-header__block-headline= options.title
                .block-content
                    - for (var block in blocks)
                        - blocks[block]()
                    -blocks = {}
    

mixin set-block(key)
    - blocks[key] = this.block